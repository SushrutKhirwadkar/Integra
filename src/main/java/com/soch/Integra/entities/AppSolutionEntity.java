package com.soch.Integra.entities;
// Generated May 1, 2018 11:47:56 AM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AppSolutionTbl generated by hbm2java
 */
@Entity
@Table(name = "app_solution_tbl")
public class AppSolutionEntity implements java.io.Serializable {

	private Integer appSolutionId;
	private ApplicationEntity applicationEntity;
	private SolutionsEntity solutionsEntity;
	private boolean activeFlag;
	private String createdBy;
	private Date createdTs;
	private String updatedBy;
	private Date updatedTs;
	private String notes;
	private HostingTypeEntity hostingTypeEntity;
 	private Set<AppSolutionDeviceEntity> appSolutionDeviceEntities = new HashSet<AppSolutionDeviceEntity>(0);

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "APP_SOLUTION_ID", unique = true, nullable = false)
	public Integer getAppSolutionId() {
		return this.appSolutionId;
	}

	public void setAppSolutionId(Integer appSolutionId) {
		this.appSolutionId = appSolutionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "APPLICAITON_ID")
	public ApplicationEntity getApplicationEntity() {
		return applicationEntity;
	}

	public void setApplicationEntity(ApplicationEntity applicationEntity) {
		this.applicationEntity = applicationEntity;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SOLUTION_ID")
	public SolutionsEntity getSolutionsEntity() {
		return solutionsEntity;
	}

	public void setSolutionsEntity(SolutionsEntity solutionsEntity) {
		this.solutionsEntity = solutionsEntity;
	}

	@Column(name = "ACTIVE_FLAG", length = 1)
	public boolean getActiveFlag() {
		return this.activeFlag;
	}

	

	public void setActiveFlag(boolean activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "CREATED_BY", length = 500)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TS", length = 19)
	public Date getCreatedTs() {
		return this.createdTs;
	}

	public void setCreatedTs(Date createdTs) {
		this.createdTs = createdTs;
	}

	@Column(name = "UPDATED_BY", length = 500)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_TS", length = 19)
	public Date getUpdatedTs() {
		return this.updatedTs;
	}

	public void setUpdatedTs(Date updatedTs) {
		this.updatedTs = updatedTs;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appSolutionEntity",cascade=CascadeType.ALL)
	public Set<AppSolutionDeviceEntity> getAppSolutionDeviceEntities() {
		return appSolutionDeviceEntities;
	}

	public void setAppSolutionDeviceEntities(Set<AppSolutionDeviceEntity> appSolutionDeviceEntities) {
		this.appSolutionDeviceEntities = appSolutionDeviceEntities;
	}

	@Column(name = "NOTES")
	public String getNotes() {
		return notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="HOSTING_TYPE_ID")
	public HostingTypeEntity getHostingTypeEntity() {
		return hostingTypeEntity;
	}

	public void setHostingTypeEntity(HostingTypeEntity hostingTypeEntity) {
		this.hostingTypeEntity = hostingTypeEntity;
	}

	
	

}
