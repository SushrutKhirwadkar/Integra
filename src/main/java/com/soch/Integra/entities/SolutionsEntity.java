package com.soch.Integra.entities;
// Generated Apr 23, 2018 2:33:22 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SolutionsTbl generated by hbm2java
 */
@Entity
@Table(name = "solutions_tbl")
public class SolutionsEntity implements java.io.Serializable {

	private Integer solutionId;
	private Date certDt;
	private String certStadard;
	private Date certRenewalDueDt;
	private String versionNumber;
	private String name;
	private String patches;
	private String notes;
	private String createdBy;
	private Date createdTs;
	private String updatedBy;
	private Date updatedTs;
	private SolutionTypeEntity solutionTypeEntity;
	private Set<CertDocEntity> certDocEntities = new HashSet<CertDocEntity>(0);
	private VendorsEntity vendorsEntity;
    private LabVendorEntity labVendorEntity;
    private SystemTypeEntity systemTypeEntity;
    private Set<AppSolutionEntity> appSolutionEntities = new HashSet<AppSolutionEntity>(0);
	private HostingTypeEntity hostingTypeEntity;
	private String hostingTypeNotes;
	private PrecinctTypeEntity precinctTypeEntity;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "solution_id", unique = true, nullable = false)
	public Integer getSolutionId() {
		return this.solutionId;
	}

	public void setSolutionId(Integer solutionId) {
		this.solutionId = solutionId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CERT_DT", length = 19)
	public Date getCertDt() {
		return this.certDt;
	}

	public void setCertDt(Date certDt) {
		this.certDt = certDt;
	}

	@Column(name = "CERT_STADARD", length = 2000)
	public String getCertStadard() {
		return this.certStadard;
	}

	public void setCertStadard(String certStadard) {
		this.certStadard = certStadard;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CERT_RENEWAL_DUE_DT", length = 10)
	public Date getCertRenewalDueDt() {
		return this.certRenewalDueDt;
	}

	public void setCertRenewalDueDt(Date certRenewalDueDt) {
		this.certRenewalDueDt = certRenewalDueDt;
	}

	@Column(name = "VERSION_NUMBER", length = 45)
	public String getVersionNumber() {
		return this.versionNumber;
	}

	public void setVersionNumber(String versionNumber) {
		this.versionNumber = versionNumber;
	}

	@Column(name = "NAME")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "PATCHES")
	public String getPatches() {
		return this.patches;
	}

	public void setPatches(String patches) {
		this.patches = patches;
	}

	@Column(name = "NOTES", length = 5000)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "CREATED_BY", length = 500)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TS", length = 19)
	public Date getCreatedTs() {
		return this.createdTs;
	}

	public void setCreatedTs(Date createdTs) {
		this.createdTs = createdTs;
	}

	@Column(name = "UPDATED_BY", length = 500)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_TS", nullable = false, length = 19)
	public Date getUpdatedTs() {
		return this.updatedTs;
	}

	public void setUpdatedTs(Date updatedTs) {
		this.updatedTs = updatedTs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solutionsEntity",cascade=CascadeType.ALL)
	public Set<CertDocEntity> getCertDocEntities() {
		return certDocEntities;
	}

	public void setCertDocEntities(Set<CertDocEntity> certDocEntities) {
		this.certDocEntities = certDocEntities;
	}

	
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SOLUTION_TYPE_ID")
	public SolutionTypeEntity getSolutionTypeEntity() {
		return solutionTypeEntity;
	}

	public void setSolutionTypeEntity(SolutionTypeEntity solutionTypeEntity) {
		this.solutionTypeEntity = solutionTypeEntity;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VENDOR_ID")
	public VendorsEntity getVendorsEntity() {
		return vendorsEntity;
	}

	public void setVendorsEntity(VendorsEntity vendorsEntity) {
		this.vendorsEntity = vendorsEntity;
	}

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="LAB_VENDOR_ID")
	public LabVendorEntity getLabVendorEntity() {
		return labVendorEntity;
	}

	public void setLabVendorEntity(LabVendorEntity labVendorEntity) {
		this.labVendorEntity = labVendorEntity;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SYSTEM_TYPE_ID")
	public SystemTypeEntity getSystemTypeEntity() {
		return systemTypeEntity;
	}

	public void setSystemTypeEntity(SystemTypeEntity systemTypeEntity) {
		this.systemTypeEntity = systemTypeEntity;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solutionsEntity")
	public Set<AppSolutionEntity> getAppSolutionEntities() {
		return appSolutionEntities;
	}

	public void setAppSolutionEntities(Set<AppSolutionEntity> appSolutionEntities) {
		this.appSolutionEntities = appSolutionEntities;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="HOSTING_TYPE_ID")
	public HostingTypeEntity getHostingTypeEntity() {
		return hostingTypeEntity;
	}

	public void setHostingTypeEntity(HostingTypeEntity hostingTypeEntity) {
		this.hostingTypeEntity = hostingTypeEntity;
	}
	
	@Column(name = "HOSTING_TYPE_NOTES", nullable = false, length = 19)
	public String getHostingTypeNotes() {
		return hostingTypeNotes;
	}

	public void setHostingTypeNotes(String hostingTypeNotes) {
		this.hostingTypeNotes = hostingTypeNotes;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRECINCT_TYPE_ID")
	public PrecinctTypeEntity getPrecinctTypeEntity() {
		return precinctTypeEntity;
	}

	public void setPrecinctTypeEntity(PrecinctTypeEntity precinctTypeEntity) {
		this.precinctTypeEntity = precinctTypeEntity;
	}
	
}
