package com.soch.Integra.entities;
// Generated Apr 25, 2017 12:37:56 PM by Hibernate Tools 4.3.4.Final

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * AppBusinessAnalystTbl generated by hbm2java
 */
@Entity
@Table(name = "app_business_analyst_tbl")
public class AppBusinessAnalystEntity implements java.io.Serializable {

	private int appBusinessAnalyst;
	private ApplicationEntity applicationEntity;
	private UserEntity userEntity;
	private boolean activeFlag;

	public AppBusinessAnalystEntity() {
	}

	public AppBusinessAnalystEntity(int appBusinessAnalyst) {
		this.appBusinessAnalyst = appBusinessAnalyst;
	}

	public AppBusinessAnalystEntity(int appBusinessAnalyst, ApplicationEntity applicationEntity, UserEntity userEntity) {
		this.appBusinessAnalyst = appBusinessAnalyst;
		this.applicationEntity = applicationEntity;
		this.userEntity = userEntity;
	}

	@Id

	@Column(name = "APP_BUSINESS_ANALYST", unique = true, nullable = false)
	public int getAppBusinessAnalyst() {
		return this.appBusinessAnalyst;
	}

	public void setAppBusinessAnalyst(int appBusinessAnalyst) {
		this.appBusinessAnalyst = appBusinessAnalyst;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "APPLICATION_ID")
	public ApplicationEntity getApplicationEntity() {
		return this.applicationEntity;
	}

	public void setApplicationEntity(ApplicationEntity applicationEntity) {
		this.applicationEntity = applicationEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "BUSINESS_ANALYST_ID")
	public UserEntity getUserEntity() {
		return this.userEntity;
	}

	public void setUserEntity(UserEntity userEntity) {
		this.userEntity = userEntity;
	}

	@Column(name = "ACTIVITY_FLAG")
	public boolean isActiveFlag() {
		return activeFlag;
	}

	public void setActiveFlag(boolean activeFlag) {
		this.activeFlag = activeFlag;
	}
	
	
	

}
