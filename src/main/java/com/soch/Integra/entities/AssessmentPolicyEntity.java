package com.soch.Integra.entities;
// default package
// Generated Dec 16, 2017 11:08:41 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AssessmentPolicyTbl generated by hbm2java
 */
@Entity
@Table(name = "assessment_policy_tbl")
public class AssessmentPolicyEntity implements java.io.Serializable {

	private Integer assessmentPolicyId;
	private PolicyEntity policyEntity;
	private boolean confidentiality;
	private boolean integrity;
	private boolean availability;
	private Date completionDt;
	private String vulnerabilityFamily;
	private String riskVulnerability;
	private String riskThreat;
	private String riskSummary;
	private String impactMagnitude;
	private String createdBy;
	private Date createdTs;
	private String updatedBy;
	private Date updatedTs;
	private AssessmentEntity assessmentEntity;
	private String cyberSecurityFramework;
	private String controlsInPlace;
	private String status;

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ASSESSMENT_POLICY_ID", unique = true, nullable = false)
	public Integer getAssessmentPolicyId() {
		return this.assessmentPolicyId;
	}

	public void setAssessmentPolicyId(Integer assessmentPolicyId) {
		this.assessmentPolicyId = assessmentPolicyId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "POLICY_ID")
	public PolicyEntity getPolicyEntity() {
		return policyEntity;
	}

	public void setPolicyEntity(PolicyEntity policyEntity) {
		this.policyEntity = policyEntity;
	}


	@Column(name = "CONFIDENTIALITY", length = 1)
	public boolean getConfidentiality() {
		return this.confidentiality;
	}

	public void setConfidentiality(boolean confidentiality) {
		this.confidentiality = confidentiality;
	}

	@Column(name = "INTEGRITY", length = 1)
	public boolean getIntegrity() {
		return this.integrity;
	}

	public void setIntegrity(boolean integrity) {
		this.integrity = integrity;
	}

	@Column(name = "AVAILABILITY", length = 1)
	public boolean getAvailability() {
		return this.availability;
	}

	public void setAvailability(boolean availability) {
		this.availability = availability;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "COMPLETION_dt", length = 19)
	public Date getCompletionDt() {
		return this.completionDt;
	}

	public void setCompletionDt(Date completionDt) {
		this.completionDt = completionDt;
	}

	@Column(name = "VULNERABILITY_FAMILY", length = 65535)
	public String getVulnerabilityFamily() {
		return this.vulnerabilityFamily;
	}

	public void setVulnerabilityFamily(String vulnerabilityFamily) {
		this.vulnerabilityFamily = vulnerabilityFamily;
	}

	@Column(name = "RISK_VULNERABILITY", length = 65535)
	public String getRiskVulnerability() {
		return this.riskVulnerability;
	}

	public void setRiskVulnerability(String riskVulnerability) {
		this.riskVulnerability = riskVulnerability;
	}

	@Column(name = "RISK_THREAT", length = 65535)
	public String getRiskThreat() {
		return riskThreat;
	}

	public void setRiskThreat(String riskThreat) {
		this.riskThreat = riskThreat;
	}

	@Column(name = "RISK_SUMMARY", length = 65535)
	public String getRiskSummary() {
		return this.riskSummary;
	}

	public void setRiskSummary(String riskSummary) {
		this.riskSummary = riskSummary;
	}

	@Column(name = "IMPACT_MAGNITUDE", length = 200)
	public String getImpactMagnitude() {
		return this.impactMagnitude;
	}

	public void setImpactMagnitude(String impactMagnitude) {
		this.impactMagnitude = impactMagnitude;
	}

	@Column(name = "CREATED_BY", length = 300)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TS", length = 19)
	public Date getCreatedTs() {
		return this.createdTs;
	}

	public void setCreatedTs(Date createdTs) {
		this.createdTs = createdTs;
	}

	@Column(name = "UPDATED_BY", length = 300)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_TS", length = 19)
	public Date getUpdatedTs() {
		return this.updatedTs;
	}

	public void setUpdatedTs(Date updatedTs) {
		this.updatedTs = updatedTs;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ASSESSMENT_ID", nullable = false)
	public AssessmentEntity getAssessmentEntity() {
		return assessmentEntity;
	}

	public void setAssessmentEntity(AssessmentEntity assessmentEntity) {
		this.assessmentEntity = assessmentEntity;
	}
	
	@Column(name = "CYBERSECURITY_FRAMEWORK")
	
	public String getCyberSecurityFramework() {
		return cyberSecurityFramework;
	}

	public void setCyberSecurityFramework(String cyberSecurityFramework) {
		this.cyberSecurityFramework = cyberSecurityFramework;
	}
	
	@Column(name = "CONTROLS_IN_PLACE")
	public String getControlsInPlace() {
		return controlsInPlace;
	}

	public void setControlsInPlace(String controlsInPlace) {
		this.controlsInPlace = controlsInPlace;
	}
	
	@Column(name = "STATUS")
	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
	
	

}
