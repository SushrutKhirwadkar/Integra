package com.soch.Integra.entities;
// Generated April 25, 2017 12:37:56 PM by Hibernate Tools 4.3.4.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserTbl generated by hbm2java
 */
@Entity
@Table(name = "user_tbl")
public class UserEntity implements java.io.Serializable {

	private int userId;
	private OfficeEntity officeEntity;
	private String loginId;
	private UserAppRoleEntity userAppRoleEntity;
	private String password;
	private String firstName;
	private String lastName;
	private String phoneNumber;
	private String emailId;
	private String title;
	private Date createdTs;
	private String createdBy;
	private Date modifiedTs;
	private String modifiedBy;
	private Integer IAMId;
	
	private Set<ApplicationDatabaseEntity> applicationDatabaseEntitiesForAdministrator = new HashSet<ApplicationDatabaseEntity>(
			0);
	private Set<ApplicationEntity> applicationEntitiesForProjectManager = new HashSet<ApplicationEntity>(0);
	private Set<FiscalYearInfoEntity> fiscalYearInfoEntities = new HashSet<FiscalYearInfoEntity>(0);
	private Set<ApplicationEntity> applicationEntitiesForIso = new HashSet<ApplicationEntity>(0);
	private Set<ApplicationEntity> applicationEntitiesForApprovedBy = new HashSet<ApplicationEntity>(0);
	private Set<AppDevelopersEntity> appDevelopersEntities = new HashSet<AppDevelopersEntity>(0);
	private Set<ApplicationEntity> applicationEntitiesForTechnicalProjectManager = new HashSet<ApplicationEntity>(0);
	private Set<ApplicationDatabaseEntity> applicationDatabaseEntitiesForCreatedBy = new HashSet<ApplicationDatabaseEntity>(0);
	private Set<ApplicationEntity> applicationEntitiesForSystemOwner = new HashSet<ApplicationEntity>(0);
	private Set<AppBusinessAnalystEntity> appBusinessAnalystEntities = new HashSet<AppBusinessAnalystEntity>(0);
	private Set<ApplicationEntity> applicationEntitiesForDataOwner = new HashSet<ApplicationEntity>(0);
	private Set<ApplicationEntity> applicationEntitiesForBusinessOwner = new HashSet<>(0);
	private Set<DatabaseEntity> databaseEntities = new HashSet<DatabaseEntity>(0);
	private Set<ApplDocEntity> applDocEntities = new HashSet<ApplDocEntity>(0);
	private Set<ApplicationEntity> systemAdministrator = new HashSet<ApplicationEntity>(0);


	@Id
	@Column(name = "USER_ID", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "OFFICE_TBL_OFFICE_ID")
	public OfficeEntity getOfficeEntity() {
		return this.officeEntity;
	}

	public void setOfficeEntity(OfficeEntity officeEntity) {
		this.officeEntity = officeEntity;
	}

	@Column(name = "LOGIN_ID", length = 100)
	public String getLoginId() {
		return this.loginId;
	}

	public void setLoginId(String loginId) {
		this.loginId = loginId;
	}

	@Column(name = "PASSWORD", length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "FIRST_NAME", length = 100)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", length = 100)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "PHONE_NUMBER", length = 100)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "EMAIL_ID", length = 200)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "TITLE", length = 100)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TS", length = 19)
	public Date getCreatedTs() {
		return this.createdTs;
	}

	public void setCreatedTs(Date createdTs) {
		this.createdTs = createdTs;
	}

	@Column(name = "CREATED_BY", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFIED_TS", length = 19)
	public Date getModifiedTs() {
		return this.modifiedTs;
	}

	public void setModifiedTs(Date modifiedTs) {
		this.modifiedTs = modifiedTs;
	}

	@Column(name = "MODIFIED_BY", length = 100)
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntityByAdministrator")
	public Set<ApplicationDatabaseEntity> getApplicationDatabaseEntitiesForAdministrator() {
		return this.applicationDatabaseEntitiesForAdministrator;
	}

	public void setApplicationDatabaseEntitiesForAdministrator(
			Set<ApplicationDatabaseEntity> applicationDatabaseEntitiesForAdministrator) {
		this.applicationDatabaseEntitiesForAdministrator = applicationDatabaseEntitiesForAdministrator;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntityByProjectManager")
	public Set<ApplicationEntity> getApplicationEntitiesForProjectManager() {
		return this.applicationEntitiesForProjectManager;
	}

	public void setApplicationEntitiesForProjectManager(Set<ApplicationEntity> applicationEntitiesForProjectManager) {
		this.applicationEntitiesForProjectManager = applicationEntitiesForProjectManager;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntity")
	public Set<FiscalYearInfoEntity> getFiscalYearInfoEntities() {
		return this.fiscalYearInfoEntities;
	}

	public void setFiscalYearInfoEntities(Set<FiscalYearInfoEntity> fiscalYearInfoEntities) {
		this.fiscalYearInfoEntities = fiscalYearInfoEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntityByIso")
	public Set<ApplicationEntity> getApplicationEntitiesForIso() {
		return this.applicationEntitiesForIso;
	}

	public void setApplicationEntitiesForIso(Set<ApplicationEntity> applicationEntitiesForIso) {
		this.applicationEntitiesForIso = applicationEntitiesForIso;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntityByApprovedBy")
	public Set<ApplicationEntity> getApplicationEntitiesForApprovedBy() {
		return this.applicationEntitiesForApprovedBy;
	}

	public void setApplicationEntitiesForApprovedBy(Set<ApplicationEntity> applicationEntitiesForApprovedBy) {
		this.applicationEntitiesForApprovedBy = applicationEntitiesForApprovedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntity")
	public Set<AppDevelopersEntity> getAppDevelopersEntities() {
		return this.appDevelopersEntities;
	}

	public void setAppDevelopersEntities(Set<AppDevelopersEntity> appDevelopersEntities) {
		this.appDevelopersEntities = appDevelopersEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntityByTechnicalProjectManager")
	public Set<ApplicationEntity> getApplicationEntitiesForTechnicalProjectManager() {
		return this.applicationEntitiesForTechnicalProjectManager;
	}

	public void setApplicationEntitiesForTechnicalProjectManager(
			Set<ApplicationEntity> applicationEntitiesForTechnicalProjectManager) {
		this.applicationEntitiesForTechnicalProjectManager = applicationEntitiesForTechnicalProjectManager;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntityByCreatedBy")
	public Set<ApplicationDatabaseEntity> getApplicationDatabaseEntitiesForCreatedBy() {
		return this.applicationDatabaseEntitiesForCreatedBy;
	}

	public void setApplicationDatabaseEntitiesForCreatedBy(
			Set<ApplicationDatabaseEntity> applicationDatabaseEntitiesForCreatedBy) {
		this.applicationDatabaseEntitiesForCreatedBy = applicationDatabaseEntitiesForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntityBySystemOwner")
	public Set<ApplicationEntity> getApplicationEntitiesForSystemOwner() {
		return this.applicationEntitiesForSystemOwner;
	}

	public void setApplicationEntitiesForSystemOwner(Set<ApplicationEntity> applicationEntitiesForSystemOwner) {
		this.applicationEntitiesForSystemOwner = applicationEntitiesForSystemOwner;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntity")
	public Set<AppBusinessAnalystEntity> getAppBusinessAnalystEntities() {
		return appBusinessAnalystEntities;
	}

	public void setAppBusinessAnalystEntities(Set<AppBusinessAnalystEntity> appBusinessAnalystEntities) {
		this.appBusinessAnalystEntities = appBusinessAnalystEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntityByDataOwner")
	public Set<ApplicationEntity> getApplicationEntitiesForDataOwner() {
		return this.applicationEntitiesForDataOwner;
	}
	public void setApplicationEntitiesForDataOwner(Set<ApplicationEntity> applicationEntitiesForDataOwner) {
		this.applicationEntitiesForDataOwner = applicationEntitiesForDataOwner;
	}
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntityByBusinessOwner")
	public Set<ApplicationEntity> getApplicationEntitiesForBusinessOwner() {
		return this.applicationEntitiesForBusinessOwner;
	}

	public void setApplicationEntitiesForBusinessOwner(Set<ApplicationEntity> applicationEntitiesForBusinessOwner) {
		this.applicationEntitiesForBusinessOwner = applicationEntitiesForBusinessOwner;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntity")
	public Set<DatabaseEntity> getDatabaseEntities() {
		return this.databaseEntities;
	}

	public void setDatabaseEntities(Set<DatabaseEntity> databaseEntities) {
		this.databaseEntities = databaseEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEntity")
	public Set<ApplDocEntity> getApplDocEntities() {
		return this.applDocEntities;
	}

	public void setApplDocEntities(Set<ApplDocEntity> applDocEntities) {
		this.applDocEntities = applDocEntities;
	}

	
	@ManyToOne(fetch = FetchType.EAGER,cascade=CascadeType.ALL)
	@JoinColumn(name = "APP_ROLE_ID")
	public UserAppRoleEntity getUserAppRoleEntity() {
		return userAppRoleEntity;
	}

	public void setUserAppRoleEntity(UserAppRoleEntity userAppRoleEntity) {
		this.userAppRoleEntity = userAppRoleEntity;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemAdministrator")
	public Set<ApplicationEntity> getSystemAdministrator() {
		return systemAdministrator;
	}

	public void setSystemAdministrator(Set<ApplicationEntity> systemAdministrator) {
		this.systemAdministrator = systemAdministrator;
	}
	
	@Column(name = "IAM_ID")
	public Integer getIAMId() {
		return IAMId;
	}

	public void setIAMId(Integer iAMId) {
		IAMId = iAMId;
	}
	
	
	
	

}
